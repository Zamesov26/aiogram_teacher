"""rename indexes

Revision ID: 1d0c22008a13
Revises: 3482d98178ab
Create Date: 2025-10-19 20:25:59.517867

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "1d0c22008a13"
down_revision: Union[str, Sequence[str], None] = "3482d98178ab"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f("admins_user_id_key"), "admins", type_="unique")
    op.drop_constraint(op.f("admins_username_key"), "admins", type_="unique")
    op.create_unique_constraint(op.f("uq_admins__user_id"), "admins", ["user_id"])
    op.create_unique_constraint(op.f("uq_admins__username"), "admins", ["username"])
    op.drop_constraint(op.f("link_events_code_key"), "link_events", type_="unique")
    op.create_unique_constraint(op.f("uq_link_events__code"), "link_events", ["code"])
    op.drop_constraint(op.f("teachers_user_id_key"), "teachers", type_="unique")
    op.create_unique_constraint(op.f("uq_teachers__user_id"), "teachers", ["user_id"])
    op.drop_index(op.f("ix_telegram_users_username"), table_name="telegram_users")
    op.create_index(
        op.f("ix_telegram_users__username"),
        "telegram_users",
        ["username"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_telegram_users__username"), table_name="telegram_users")
    op.create_index(
        op.f("ix_telegram_users_username"), "telegram_users", ["username"], unique=False
    )
    op.drop_constraint(op.f("uq_teachers__user_id"), "teachers", type_="unique")
    op.create_unique_constraint(
        op.f("teachers_user_id_key"),
        "teachers",
        ["user_id"],
        postgresql_nulls_not_distinct=False,
    )
    op.drop_constraint(op.f("uq_link_events__code"), "link_events", type_="unique")
    op.create_unique_constraint(
        op.f("link_events_code_key"),
        "link_events",
        ["code"],
        postgresql_nulls_not_distinct=False,
    )
    op.drop_constraint(op.f("uq_admins__username"), "admins", type_="unique")
    op.drop_constraint(op.f("uq_admins__user_id"), "admins", type_="unique")
    op.create_unique_constraint(
        op.f("admins_username_key"),
        "admins",
        ["username"],
        postgresql_nulls_not_distinct=False,
    )
    op.create_unique_constraint(
        op.f("admins_user_id_key"),
        "admins",
        ["user_id"],
        postgresql_nulls_not_distinct=False,
    )
    # ### end Alembic commands ###
